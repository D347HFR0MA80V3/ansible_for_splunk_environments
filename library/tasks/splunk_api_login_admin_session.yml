---
# Library Task... Include this to securely login a Splunk and return a self expiring session cookie.

# Registers the splunk_admin_cookie that will reset in 60 minutes based on the splunk defaults.

# How to use:
# - include: library/tasks/splunk_api_login_admin_session.yml
#     task_bread_crumb=<name of the task that called this one eg: detect_splunk>
#     login_admin_session_validate_certs=<set certificate validation for api call eg: (yes|no)>

- name: "{{ task_bread_crumb }} - library/tasks/splunk_api_login_admin_session - Logging in Splunk admin user -> {{ username }}... common failures are typically mistyped admin creds or your AAA service. Also ensure Splunk is running."
  uri:
    method: POST
    url: https://localhost:{{ splunk_all_mgmt_port }}/services/auth/login
    body_format: form-urlencoded
    body:
      username: "{{ splunk_admin_username }}"
      password: "{{ splunk_admin_password }}"
      cookie: 1
    validate_certs: "{{ login_admin_session_validate_certs }}"
    return_content: yes
  no_log: yes
  register: splunk_session
  when: splunk_running

- name: library_tasks - splunk_api_login_admin_session - SET fact with the returned session cookie
  set_fact:
    splunk_cookie: "{{ splunk_session.cookies_string | regex_replace ('splunkd_\\d+\\=(\\w+)', '\\1') }}"
  when: splunk_running
